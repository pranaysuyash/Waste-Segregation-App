// Mocks generated by Mockito 5.4.4 from annotations
// in waste_segregation_app/test/widgets/banner_ad_widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:flutter/foundation.dart' as _i3;
import 'package:flutter/material.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:waste_segregation_app/models/premium_feature.dart' as _i8;
import 'package:waste_segregation_app/services/ad_service.dart' as _i4;
import 'package:waste_segregation_app/services/premium_service.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWidget_0 extends _i1.SmartFake implements _i2.Widget {
  _FakeWidget_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [AdService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdService extends _i1.Mock implements _i4.AdService {
  MockAdService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  bool get shouldShowAds => (super.noSuchMethod(
        Invocation.getter(#shouldShowAds),
        returnValue: false,
      ) as bool);

  @override
  bool get canShowInterstitialAd => (super.noSuchMethod(
        Invocation.getter(#canShowInterstitialAd),
        returnValue: false,
      ) as bool);

  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setPremiumStatus(bool? hasPremium) => super.noSuchMethod(
        Invocation.method(
          #setPremiumStatus,
          [hasPremium],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i2.Widget getBannerAd() => (super.noSuchMethod(
        Invocation.method(
          #getBannerAd,
          [],
        ),
        returnValue: _FakeWidget_0(
          this,
          Invocation.method(
            #getBannerAd,
            [],
          ),
        ),
      ) as _i2.Widget);

  @override
  _i5.Future<bool> showInterstitialAd() => (super.noSuchMethod(
        Invocation.method(
          #showInterstitialAd,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  void trackClassificationCompleted() => super.noSuchMethod(
        Invocation.method(
          #trackClassificationCompleted,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool shouldShowInterstitial() => (super.noSuchMethod(
        Invocation.method(
          #shouldShowInterstitial,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setInClassificationFlow(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInClassificationFlow,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInEducationalContent(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInEducationalContent,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInSettings(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInSettings,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void incrementClassificationCount() => super.noSuchMethod(
        Invocation.method(
          #incrementClassificationCount,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void trackClassification() => super.noSuchMethod(
        Invocation.method(
          #trackClassification,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshBannerAd() => super.noSuchMethod(
        Invocation.method(
          #refreshBannerAd,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PremiumService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPremiumService extends _i1.Mock implements _i7.PremiumService {
  MockPremiumService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  bool isPremiumFeature(String? featureId) => (super.noSuchMethod(
        Invocation.method(
          #isPremiumFeature,
          [featureId],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<void> setPremiumFeature(
    String? featureId,
    bool? isPremium,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPremiumFeature,
          [
            featureId,
            isPremium,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  List<_i8.PremiumFeature> getPremiumFeatures() => (super.noSuchMethod(
        Invocation.method(
          #getPremiumFeatures,
          [],
        ),
        returnValue: <_i8.PremiumFeature>[],
      ) as List<_i8.PremiumFeature>);

  @override
  List<_i8.PremiumFeature> getComingSoonFeatures() => (super.noSuchMethod(
        Invocation.method(
          #getComingSoonFeatures,
          [],
        ),
        returnValue: <_i8.PremiumFeature>[],
      ) as List<_i8.PremiumFeature>);

  @override
  _i5.Future<void> resetPremiumFeatures() => (super.noSuchMethod(
        Invocation.method(
          #resetPremiumFeatures,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> toggleFeature(String? featureId) => (super.noSuchMethod(
        Invocation.method(
          #toggleFeature,
          [featureId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
