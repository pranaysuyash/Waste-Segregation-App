// Mocks generated by Mockito 5.4.4 from annotations
// in waste_segregation_app/test/screens/educational_content_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:ui' as _i8;

import 'package:flutter/foundation.dart' as _i4;
import 'package:flutter/material.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:waste_segregation_app/models/educational_content.dart' as _i2;
import 'package:waste_segregation_app/services/ad_service.dart' as _i6;
import 'package:waste_segregation_app/services/educational_content_service.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDailyTip_0 extends _i1.SmartFake implements _i2.DailyTip {
  _FakeDailyTip_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_1 extends _i1.SmartFake implements _i3.Widget {
  _FakeWidget_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [EducationalContentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEducationalContentService extends _i1.Mock
    implements _i5.EducationalContentService {
  MockEducationalContentService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DailyTip getRandomDailyTip() => (super.noSuchMethod(
        Invocation.method(
          #getRandomDailyTip,
          [],
        ),
        returnValue: _FakeDailyTip_0(
          this,
          Invocation.method(
            #getRandomDailyTip,
            [],
          ),
        ),
      ) as _i2.DailyTip);

  @override
  _i2.DailyTip getDailyTip({DateTime? date}) => (super.noSuchMethod(
        Invocation.method(
          #getDailyTip,
          [],
          {#date: date},
        ),
        returnValue: _FakeDailyTip_0(
          this,
          Invocation.method(
            #getDailyTip,
            [],
            {#date: date},
          ),
        ),
      ) as _i2.DailyTip);

  @override
  List<_i2.EducationalContent> getAllContent() => (super.noSuchMethod(
        Invocation.method(
          #getAllContent,
          [],
        ),
        returnValue: <_i2.EducationalContent>[],
      ) as List<_i2.EducationalContent>);

  @override
  List<_i2.EducationalContent> getContentByCategory(String? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContentByCategory,
          [category],
        ),
        returnValue: <_i2.EducationalContent>[],
      ) as List<_i2.EducationalContent>);

  @override
  List<_i2.EducationalContent> getContentByType(_i2.ContentType? type) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContentByType,
          [type],
        ),
        returnValue: <_i2.EducationalContent>[],
      ) as List<_i2.EducationalContent>);

  @override
  List<_i2.EducationalContent> searchContent(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchContent,
          [query],
        ),
        returnValue: <_i2.EducationalContent>[],
      ) as List<_i2.EducationalContent>);

  @override
  _i2.EducationalContent? getContentById(String? id) =>
      (super.noSuchMethod(Invocation.method(
        #getContentById,
        [id],
      )) as _i2.EducationalContent?);

  @override
  List<_i2.EducationalContent> getFeaturedContent() => (super.noSuchMethod(
        Invocation.method(
          #getFeaturedContent,
          [],
        ),
        returnValue: <_i2.EducationalContent>[],
      ) as List<_i2.EducationalContent>);

  @override
  List<_i2.DailyTip> getAllDailyTips() => (super.noSuchMethod(
        Invocation.method(
          #getAllDailyTips,
          [],
        ),
        returnValue: <_i2.DailyTip>[],
      ) as List<_i2.DailyTip>);
}

/// A class which mocks [AdService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdService extends _i1.Mock implements _i6.AdService {
  MockAdService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  bool get shouldShowAds => (super.noSuchMethod(
        Invocation.getter(#shouldShowAds),
        returnValue: false,
      ) as bool);

  @override
  bool get canShowInterstitialAd => (super.noSuchMethod(
        Invocation.getter(#canShowInterstitialAd),
        returnValue: false,
      ) as bool);

  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setPremiumStatus(bool? hasPremium) => super.noSuchMethod(
        Invocation.method(
          #setPremiumStatus,
          [hasPremium],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i3.Widget getBannerAd() => (super.noSuchMethod(
        Invocation.method(
          #getBannerAd,
          [],
        ),
        returnValue: _FakeWidget_1(
          this,
          Invocation.method(
            #getBannerAd,
            [],
          ),
        ),
      ) as _i3.Widget);

  @override
  _i7.Future<bool> showInterstitialAd() => (super.noSuchMethod(
        Invocation.method(
          #showInterstitialAd,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  void trackClassificationCompleted() => super.noSuchMethod(
        Invocation.method(
          #trackClassificationCompleted,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool shouldShowInterstitial() => (super.noSuchMethod(
        Invocation.method(
          #shouldShowInterstitial,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setInClassificationFlow(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInClassificationFlow,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInEducationalContent(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInEducationalContent,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInSettings(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInSettings,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void incrementClassificationCount() => super.noSuchMethod(
        Invocation.method(
          #incrementClassificationCount,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void trackClassification() => super.noSuchMethod(
        Invocation.method(
          #trackClassification,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshBannerAd() => super.noSuchMethod(
        Invocation.method(
          #refreshBannerAd,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
