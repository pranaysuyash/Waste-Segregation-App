// Mocks generated by Mockito 5.4.4 from annotations
// in waste_segregation_app/test/services/analytics_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:waste_segregation_app/models/filter_options.dart' as _i6;
import 'package:waste_segregation_app/models/user_profile.dart' as _i4;
import 'package:waste_segregation_app/models/waste_classification.dart' as _i5;
import 'package:waste_segregation_app/services/storage_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i2.StorageService {
  MockStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveUserProfile(_i4.UserProfile? userProfile) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserProfile,
          [userProfile],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.UserProfile?> getCurrentUserProfile() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUserProfile,
          [],
        ),
        returnValue: _i3.Future<_i4.UserProfile?>.value(),
      ) as _i3.Future<_i4.UserProfile?>);

  @override
  _i3.Future<void> clearUserInfo() => (super.noSuchMethod(
        Invocation.method(
          #clearUserInfo,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> isUserLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isUserLoggedIn,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> saveClassification(
          _i5.WasteClassification? classification) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveClassification,
          [classification],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.WasteClassification>> getAllClassifications(
          {_i6.FilterOptions? filterOptions}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllClassifications,
          [],
          {#filterOptions: filterOptions},
        ),
        returnValue: _i3.Future<List<_i5.WasteClassification>>.value(
            <_i5.WasteClassification>[]),
      ) as _i3.Future<List<_i5.WasteClassification>>);

  @override
  _i3.Future<List<_i5.WasteClassification>> getClassificationsWithPagination({
    _i6.FilterOptions? filterOptions,
    int? pageSize = 20,
    int? page = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getClassificationsWithPagination,
          [],
          {
            #filterOptions: filterOptions,
            #pageSize: pageSize,
            #page: page,
          },
        ),
        returnValue: _i3.Future<List<_i5.WasteClassification>>.value(
            <_i5.WasteClassification>[]),
      ) as _i3.Future<List<_i5.WasteClassification>>);

  @override
  _i3.Future<int> getClassificationsCount({_i6.FilterOptions? filterOptions}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getClassificationsCount,
          [],
          {#filterOptions: filterOptions},
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<String> exportClassificationsToCSV(
          {_i6.FilterOptions? filterOptions}) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportClassificationsToCSV,
          [],
          {#filterOptions: filterOptions},
        ),
        returnValue: _i3.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #exportClassificationsToCSV,
            [],
            {#filterOptions: filterOptions},
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<void> deleteClassification(String? key) => (super.noSuchMethod(
        Invocation.method(
          #deleteClassification,
          [key],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearAllClassifications() => (super.noSuchMethod(
        Invocation.method(
          #clearAllClassifications,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveSettings({
    required bool? isDarkMode,
    required bool? isGoogleSyncEnabled,
    bool? allowHistoryFeedback,
    int? feedbackTimeframeDays,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSettings,
          [],
          {
            #isDarkMode: isDarkMode,
            #isGoogleSyncEnabled: isGoogleSyncEnabled,
            #allowHistoryFeedback: allowHistoryFeedback,
            #feedbackTimeframeDays: feedbackTimeframeDays,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<Map<String, dynamic>> getSettings() => (super.noSuchMethod(
        Invocation.method(
          #getSettings,
          [],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<_i5.WasteClassification?> getCachedClassification(String? hash) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedClassification,
          [hash],
        ),
        returnValue: _i3.Future<_i5.WasteClassification?>.value(),
      ) as _i3.Future<_i5.WasteClassification?>);

  @override
  _i3.Future<void> saveCachedClassification(
    String? hash,
    _i5.WasteClassification? classification,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCachedClassification,
          [
            hash,
            classification,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String> exportUserData() => (super.noSuchMethod(
        Invocation.method(
          #exportUserData,
          [],
        ),
        returnValue: _i3.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #exportUserData,
            [],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<void> importUserData(String? jsonData) => (super.noSuchMethod(
        Invocation.method(
          #importUserData,
          [jsonData],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearClassifications() => (super.noSuchMethod(
        Invocation.method(
          #clearClassifications,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearAllUserData() => (super.noSuchMethod(
        Invocation.method(
          #clearAllUserData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveAnalyticsEvents(List<dynamic>? events) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAnalyticsEvents,
          [events],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<Map<String, dynamic>>> loadAnalyticsEvents() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadAnalyticsEvents,
          [],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<int> getGuestDataMigrationCount() => (super.noSuchMethod(
        Invocation.method(
          #getGuestDataMigrationCount,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<int> migrateGuestDataToCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #migrateGuestDataToCurrentUser,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  List<_i5.WasteClassification> applyFiltersToClassifications(
    List<_i5.WasteClassification>? classifications,
    _i6.FilterOptions? filterOptions,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #applyFiltersToClassifications,
          [
            classifications,
            filterOptions,
          ],
        ),
        returnValue: <_i5.WasteClassification>[],
      ) as List<_i5.WasteClassification>);

  @override
  _i3.Future<int> cleanupDuplicateClassifications() => (super.noSuchMethod(
        Invocation.method(
          #cleanupDuplicateClassifications,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
}
