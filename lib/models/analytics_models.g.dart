// GENERATED CODE - DO NOT MODIFY BY HAND\n\npart of 'analytics_models.dart';\n\n// **************************************************************************\n// JsonSerializableGenerator\n// **************************************************************************\n\nAnalyticsEvent _$AnalyticsEventFromJson(Map<String, dynamic> json) =>\n    AnalyticsEvent(\n      id: json['id'] as String,\n      userId: json['userId'] as String,\n      sessionId: json['sessionId'] as String,\n      eventType: json['eventType'] as String,\n      eventName: json['eventName'] as String,\n      timestamp: DateTime.parse(json['timestamp'] as String),\n      parameters: json['parameters'] as Map<String, dynamic>,\n      screenName: json['screenName'] as String?,\n      previousScreen: json['previousScreen'] as String?,\n      deviceInfo: json['deviceInfo'] as Map<String, dynamic>,\n      userContext: json['userContext'] as Map<String, dynamic>,\n      sessionDuration: json['sessionDuration'] == null\n          ? null\n          : Duration(microseconds: json['sessionDuration'] as int),\n      appVersion: json['appVersion'] as String,\n      platform: json['platform'] as String,\n      userSegment: json['userSegment'] as String?,\n      isOffline: json['isOffline'] as bool? ?? false,\n      customDimensions: json['customDimensions'] as Map<String, dynamic>?,\n    );\n\nMap<String, dynamic> _$AnalyticsEventToJson(AnalyticsEvent instance) =>\n    <String, dynamic>{\n      'id': instance.id,\n      'userId': instance.userId,\n      'sessionId': instance.sessionId,\n      'eventType': instance.eventType,\n      'eventName': instance.eventName,\n      'timestamp': instance.timestamp.toIso8601String(),\n      'parameters': instance.parameters,\n      'screenName': instance.screenName,\n      'previousScreen': instance.previousScreen,\n      'deviceInfo': instance.deviceInfo,\n      'userContext': instance.userContext,\n      'sessionDuration': instance.sessionDuration?.inMicroseconds,\n      'appVersion': instance.appVersion,\n      'platform': instance.platform,\n      'userSegment': instance.userSegment,\n      'isOffline': instance.isOffline,\n      'customDimensions': instance.customDimensions,\n    };\n\nClassificationAnalytics _$ClassificationAnalyticsFromJson(\n        Map<String, dynamic> json) =>\n    ClassificationAnalytics(\n      classificationId: json['classificationId'] as String,\n      userId: json['userId'] as String,\n      timestamp: DateTime.parse(json['timestamp'] as String),\n      category: json['category'] as String,\n      subcategory: json['subcategory'] as String?,\n      materialType: json['materialType'] as String?,\n      confidence: (json['confidence'] as num).toDouble(),\n      method: json['method'] as String,\n      imageMetadata: json['imageMetadata'] as Map<String, dynamic>,\n      aiModelInfo: json['aiModelInfo'] as Map<String, dynamic>,\n      pointsEarned: json['pointsEarned'] as int,\n      source: json['source'] as String,\n      locationData: json['locationData'] as Map<String, dynamic>,\n      isRecyclable: json['isRecyclable'] as bool,\n      isCompostable: json['isCompostable'] as bool,\n      requiresSpecialDisposal: json['requiresSpecialDisposal'] as bool,\n      disposalGuidance: json['disposalGuidance'] as String?,\n      processingTime: Duration(microseconds: json['processingTime'] as int),\n      alternativeCategories: (json['alternativeCategories'] as List<dynamic>)\n          .map((e) => e as String)\n          .toList(),\n      userFeedback: json['userFeedback'] as Map<String, dynamic>,\n      qualityMetrics: json['qualityMetrics'] as Map<String, dynamic>,\n      contextTags: json['contextTags'] as String?,\n      isShared: json['isShared'] as bool,\n      familyId: json['familyId'] as String?,\n      environmentalImpact: json['environmentalImpact'] as Map<String, dynamic>,\n      costAnalysis: json['costAnalysis'] as Map<String, dynamic>,\n      correctionRequired: json['correctionRequired'] as bool,\n      originalPrediction: json['originalPrediction'] as String?,\n      correctedCategory: json['correctedCategory'] as String?,\n      learningData: json['learningData'] as Map<String, dynamic>,\n    );\n\nMap<String, dynamic> _$ClassificationAnalyticsToJson(\n        ClassificationAnalytics instance) =>\n    <String, dynamic>{\n      'classificationId': instance.classificationId,\n      'userId': instance.userId,\n      'timestamp': instance.timestamp.toIso8601String(),\n      'category': instance.category,\n      'subcategory': instance.subcategory,\n      'materialType': instance.materialType,\n      'confidence': instance.confidence,\n      'method': instance.method,\n      'imageMetadata': instance.imageMetadata,\n      'aiModelInfo': instance.aiModelInfo,\n      'pointsEarned': instance.pointsEarned,\n      'source': instance.source,\n      'locationData': instance.locationData,\n      'isRecyclable': instance.isRecyclable,\n      'isCompostable': instance.isCompostable,\n      'requiresSpecialDisposal': instance.requiresSpecialDisposal,\n      'disposalGuidance': instance.disposalGuidance,\n      'processingTime': instance.processingTime.inMicroseconds,\n      'alternativeCategories': instance.alternativeCategories,\n      'userFeedback': instance.userFeedback,\n      'qualityMetrics': instance.qualityMetrics,\n      'contextTags': instance.contextTags,\n      'isShared': instance.isShared,\n      'familyId': instance.familyId,\n      'environmentalImpact': instance.environmentalImpact,\n      'costAnalysis': instance.costAnalysis,\n      'correctionRequired': instance.correctionRequired,\n      'originalPrediction': instance.originalPrediction,\n      'correctedCategory': instance.correctedCategory,\n      'learningData': instance.learningData,\n    };\n\nGamificationAnalytics _$GamificationAnalyticsFromJson(\n        Map<String, dynamic> json) =>\n    GamificationAnalytics(\n      userId: json['userId'] as String,\n      timestamp: DateTime.parse(json['timestamp'] as String),\n      eventType: json['eventType'] as String,\n      pointsEarned: json['pointsEarned'] as int,\n      totalPoints: json['totalPoints'] as int,\n      level: json['level'] as int,\n      previousLevel: json['previousLevel'] as int,\n      categoryPoints: Map<String, int>.from(json['categoryPoints'] as Map),\n      streakData: json['streakData'] as Map<String, dynamic>,\n      unlockedAchievements: (json['unlockedAchievements'] as List<dynamic>)\n          .map((e) => e as String)\n          .toList(),\n      completedChallenges: (json['completedChallenges'] as List<dynamic>)\n          .map((e) => e as String)\n          .toList(),\n      weeklyStats: json['weeklyStats'] as Map<String, dynamic>,\n      monthlyStats: json['monthlyStats'] as Map<String, dynamic>,\n      pointsSource: json['pointsSource'] as String,\n      levelBenefits: json['levelBenefits'] as Map<String, dynamic>,\n      sessionTime: Duration(microseconds: json['sessionTime'] as int),\n      consecutiveDays: json['consecutiveDays'] as int,\n      leaderboardPosition: json['leaderboardPosition'] as Map<String, dynamic>,\n      socialComparisons: json['socialComparisons'] as Map<String, dynamic>,\n      isNewRecord: json['isNewRecord'] as bool,\n      motivationalTriggers: json['motivationalTriggers'] as Map<String, dynamic>,\n    );\n\nMap<String, dynamic> _$GamificationAnalyticsToJson(\n        GamificationAnalytics instance) =>\n    <String, dynamic>{\n      'userId': instance.userId,\n      'timestamp': instance.timestamp.toIso8601String(),\n      'eventType': instance.eventType,\n      'pointsEarned': instance.pointsEarned,\n      'totalPoints': instance.totalPoints,\n      'level': instance.level,\n      'previousLevel': instance.previousLevel,\n      'categoryPoints': instance.categoryPoints,\n      'streakData': instance.streakData,\n      'unlockedAchievements': instance.unlockedAchievements,\n      'completedChallenges': instance.completedChallenges,\n      'weeklyStats': instance.weeklyStats,\n      'monthlyStats': instance.monthlyStats,\n      'pointsSource': instance.pointsSource,\n      'levelBenefits': instance.levelBenefits,\n      'sessionTime': instance.sessionTime.inMicroseconds,\n      'consecutiveDays': instance.consecutiveDays,\n      'leaderboardPosition': instance.leaderboardPosition,\n      'socialComparisons': instance.socialComparisons,\n      'isNewRecord': instance.isNewRecord,\n      'motivationalTriggers': instance.motivationalTriggers,\n    };\n\nEngagementAnalytics _$EngagementAnalyticsFromJson(Map<String, dynamic> json) =>\n    EngagementAnalytics(\n      userId: json['userId'] as String,\n      timestamp: DateTime.parse(json['timestamp'] as String),\n      sessionLength: Duration(microseconds: json['sessionLength'] as int),\n      screensVisited: json['screensVisited'] as int,\n      screenTimeSpent: (json['screenTimeSpent'] as Map<String, dynamic>).map(\n        (k, e) => MapEntry(k, Duration(microseconds: e as int)),\n      ),\n      actionsPerformed: json['actionsPerformed'] as int,\n      featureUsage: Map<String, int>.from(json['featureUsage'] as Map),\n      userJourney: (json['userJourney'] as List<dynamic>)\n          .map((e) => e as String)\n          .toList(),\n      interactionPatterns: json['interactionPatterns'] as Map<String, dynamic>,\n      classificationsPerSession: json['classificationsPerSession'] as int,\n      averageConfidenceScore: (json['averageConfidenceScore'] as num).toDouble(),\n      socialInteractions: json['socialInteractions'] as int,\n      educationalContentViewed: json['educationalContentViewed'] as int,\n      preferenceData: json['preferenceData'] as Map<String, dynamic>,\n      usabilityMetrics: json['usabilityMetrics'] as Map<String, dynamic>,\n      painPoints: (json['painPoints'] as List<dynamic>)\n          .map((e) => e as String)\n          .toList(),\n      successMoments: (json['successMoments'] as List<dynamic>)\n          .map((e) => e as String)\n          .toList(),\n      accessibilityUsage: json['accessibilityUsage'] as Map<String, dynamic>,\n      isPowerUser: json['isPowerUser'] as bool,\n      userSegment: json['userSegment'] as String,\n      retentionIndicators: json['retentionIndicators'] as Map<String, dynamic>,\n      churnRisk: json['churnRisk'] as Map<String, dynamic>,\n    );\n\nMap<String, dynamic> _$EngagementAnalyticsToJson(\n        EngagementAnalytics instance) =>\n    <String, dynamic>{\n      'userId': instance.userId,\n      'timestamp': instance.timestamp.toIso8601String(),\n      'sessionLength': instance.sessionLength.inMicroseconds,\n      'screensVisited': instance.screensVisited,\n      'screenTimeSpent': instance.screenTimeSpent\n          .map((k, e) => MapEntry(k, e.inMicroseconds)),\n      'actionsPerformed': instance.actionsPerformed,\n      'featureUsage': instance.featureUsage,\n      'userJourney': instance.userJourney,\n      'interactionPatterns': instance.interactionPatterns,\n      'classificationsPerSession': instance.classificationsPerSession,\n      'averageConfidenceScore': instance.averageConfidenceScore,\n      'socialInteractions': instance.socialInteractions,\n      'educationalContentViewed': instance.educationalContentViewed,\n      'preferenceData': instance.preferenceData,\n      'usabilityMetrics': instance.usabilityMetrics,\n      'painPoints': instance.painPoints,\n      'successMoments': instance.successMoments,\n      'accessibilityUsage': instance.accessibilityUsage,\n      'isPowerUser': instance.isPowerUser,\n      'userSegment': instance.userSegment,\n      'retentionIndicators': instance.retentionIndicators,\n      'churnRisk': instance.churnRisk,\n    };\n\nSustainabilityAnalytics _$SustainabilityAnalyticsFromJson(\n        Map<String, dynamic> json) =>\n    SustainabilityAnalytics(\n      userId: json['userId'] as String,\n      timestamp: DateTime.parse(json['timestamp'] as String),\n      impactType: json['impactType'] as String,\n      impactAmount: (json['impactAmount'] as num).toDouble(),\n      impactUnit: json['impactUnit'] as String,\n      carbonFootprintReduction:\n          (json['carbonFootprintReduction'] as num).toDouble(),\n      costSavings: (json['costSavings'] as num).toDouble(),\n      categoryImpacts: json['categoryImpacts'] as Map<String, dynamic>,\n      monthlyTotals: json['monthlyTotals'] as Map<String, dynamic>,\n      yearlyTotals: json['yearlyTotals'] as Map<String, dynamic>,\n      sustainabilityGoals: (json['sustainabilityGoals'] as List<dynamic>)\n          .map((e) => e as String)\n          .toList(),\n      goalProgress: json['goalProgress'] as Map<String, dynamic>,\n      communityImpact: json['communityImpact'] as Map<String, dynamic>,\n      educationalOutcomes: json['educationalOutcomes'] as Map<String, dynamic>,\n      isImprovementFromPrevious: json['isImprovementFromPrevious'] as bool,\n      benchmarkComparisons: json['benchmarkComparisons'] as Map<String, dynamic>,\n      recommendedActions: (json['recommendedActions'] as List<dynamic>)\n          .map((e) => e as String)\n          .toList(),\n      certificationProgress: json['certificationProgress'] as Map<String, dynamic>,\n    );\n\nMap<String, dynamic> _$SustainabilityAnalyticsToJson(\n        SustainabilityAnalytics instance) =>\n    <String, dynamic>{\n      'userId': instance.userId,\n      'timestamp': instance.timestamp.toIso8601String(),\n      'impactType': instance.impactType,\n      'impactAmount': instance.impactAmount,\n      'impactUnit': instance.impactUnit,\n      'carbonFootprintReduction': instance.carbonFootprintReduction,\n      'costSavings': instance.costSavings,\n      'categoryImpacts': instance.categoryImpacts,\n      'monthlyTotals': instance.monthlyTotals,\n      'yearlyTotals': instance.yearlyTotals,\n      'sustainabilityGoals': instance.sustainabilityGoals,\n      'goalProgress': instance.goalProgress,\n      'communityImpact': instance.communityImpact,\n      'educationalOutcomes': instance.educationalOutcomes,\n      'isImprovementFromPrevious': instance.isImprovementFromPrevious,\n      'benchmarkComparisons': instance.benchmarkComparisons,\n      'recommendedActions': instance.recommendedActions,\n      'certificationProgress': instance.certificationProgress,\n    };\n\nAnalyticsAggregation _$AnalyticsAggregationFromJson(\n        Map<String, dynamic> json) =>\n    AnalyticsAggregation(\n      userId: json['userId'] as String,\n      periodStart: DateTime.parse(json['periodStart'] as String),\n      periodEnd: DateTime.parse(json['periodEnd'] as String),\n      aggregationType: json['aggregationType'] as String,\n      classificationStats: json['classificationStats'] as Map<String, dynamic>,\n      gamificationStats: json['gamificationStats'] as Map<String, dynamic>,\n      engagementStats: json['engagementStats'] as Map<String, dynamic>,\n      sustainabilityStats: json['sustainabilityStats'] as Map<String, dynamic>,\n      socialStats: json['socialStats'] as Map<String, dynamic>,\n      performanceStats: json['performanceStats'] as Map<String, dynamic>,\n      monetizationStats: json['monetizationStats'] as Map<String, dynamic>,\n      userSegmentData: json['userSegmentData'] as Map<String, dynamic>,\n      trendAnalysis: json['trendAnalysis'] as Map<String, dynamic>,\n      predictiveMetrics: json['predictiveMetrics'] as Map<String, dynamic>,\n      insights:\n          (json['insights'] as List<dynamic>).map((e) => e as String).toList(),\n      recommendations: (json['recommendations'] as List<dynamic>)\n          .map((e) => e as String)\n          .toList(),\n      comparativeBenchmarks:\n          json['comparativeBenchmarks'] as Map<String, dynamic>,\n      qualityScores: json['qualityScores'] as Map<String, dynamic>,\n    );\n\nMap<String, dynamic> _$AnalyticsAggregationToJson(\n        AnalyticsAggregation instance) =>\n    <String, dynamic>{\n      'userId': instance.userId,\n      'periodStart': instance.periodStart.toIso8601String(),\n      'periodEnd': instance.periodEnd.toIso8601String(),\n      'aggregationType': instance.aggregationType,\n      'classificationStats': instance.classificationStats,\n      'gamificationStats': instance.gamificationStats,\n      'engagementStats': instance.engagementStats,\n      'sustainabilityStats': instance.sustainabilityStats,\n      'socialStats': instance.socialStats,\n      'performanceStats': instance.performanceStats,\n      'monetizationStats': instance.monetizationStats,\n      'userSegmentData': instance.userSegmentData,\n      'trendAnalysis': instance.trendAnalysis,\n      'predictiveMetrics': instance.predictiveMetrics,\n      'insights': instance.insights,\n      'recommendations': instance.recommendations,\n      'comparativeBenchmarks': instance.comparativeBenchmarks,\n      'qualityScores': instance.qualityScores,\n    };\n
