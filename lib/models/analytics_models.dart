import 'package:json_annotation/json_annotation.dart';\n\npart 'analytics_models.g.dart';\n\n/// Analytics event types for categorizing different kinds of user interactions\nclass AnalyticsEventTypes {\n  static const String userAction = 'user_action';\n  static const String screenView = 'screen_view';\n  static const String classification = 'classification';\n  static const String gamification = 'gamification';\n  static const String social = 'social';\n  static const String achievement = 'achievement';\n  static const String error = 'error';\n  static const String performance = 'performance';\n  static const String engagement = 'engagement';\n  static const String monetization = 'monetization';\n  static const String accessibility = 'accessibility';\n  static const String sustainability = 'sustainability';\n  static const String contentInteraction = 'content_interaction';\n  static const String featureUsage = 'feature_usage';\n  static const String dataSync = 'data_sync';\n  static const String offlineUsage = 'offline_usage';\n}\n\n/// Predefined analytics event names for consistency\nclass AnalyticsEventNames {\n  // User Actions\n  static const String buttonClick = 'button_click';\n  static const String screenSwipe = 'screen_swipe';\n  static const String searchPerformed = 'search_performed';\n  static const String filterApplied = 'filter_applied';\n  static const String settingsChanged = 'settings_changed';\n  \n  // Classification Events\n  static const String classificationStarted = 'classification_started';\n  static const String classificationCompleted = 'classification_completed';\n  static const String classificationShared = 'classification_shared';\n  static const String classificationFeedback = 'classification_feedback';\n  static const String imageRetaken = 'image_retaken';\n  static const String multipleItemsDetected = 'multiple_items_detected';\n  \n  // Gamification Events\n  static const String pointsEarned = 'points_earned';\n  static const String levelUp = 'level_up';\n  static const String streakMaintained = 'streak_maintained';\n  static const String streakBroken = 'streak_broken';\n  static const String challengeCompleted = 'challenge_completed';\n  static const String badgeEarned = 'badge_earned';\n  \n  // Achievement Events\n  static const String achievementUnlocked = 'achievement_unlocked';\n  static const String achievementClaimed = 'achievement_claimed';\n  static const String milestoneReached = 'milestone_reached';\n  \n  // Social Events\n  static const String familyCreated = 'family_created';\n  static const String familyJoined = 'family_joined';\n  static const String invitationSent = 'invitation_sent';\n  static const String reactionAdded = 'reaction_added';\n  static const String communityEngagement = 'community_engagement';\n  \n  // Content & Education\n  static const String educationalContentViewed = 'educational_content_viewed';\n  static const String quizCompleted = 'quiz_completed';\n  static const String tipShared = 'tip_shared';\n  static const String guidanceFollowed = 'guidance_followed';\n  \n  // Premium & Monetization\n  static const String premiumFeatureUsed = 'premium_feature_used';\n  static const String premiumPromptShown = 'premium_prompt_shown';\n  static const String subscriptionStarted = 'subscription_started';\n  static const String adViewed = 'ad_viewed';\n  static const String adClicked = 'ad_clicked';\n  \n  // Performance & Technical\n  static const String appLaunched = 'app_launched';\n  static const String appCrashed = 'app_crashed';\n  static const String slowPerformance = 'slow_performance';\n  static const String syncCompleted = 'sync_completed';\n  static const String offlineModeUsed = 'offline_mode_used';\n  \n  // Sustainability Impact\n  static const String impactCalculated = 'impact_calculated';\n  static const String carbonFootprintReduced = 'carbon_footprint_reduced';\n  static const String recyclingGoalReached = 'recycling_goal_reached';\n  static const String wasteReduced = 'waste_reduced';\n}\n\n/// Comprehensive analytics event model\n@JsonSerializable()\nclass AnalyticsEvent {\n  final String id;\n  final String userId;\n  final String sessionId;\n  final String eventType;\n  final String eventName;\n  final DateTime timestamp;\n  final Map<String, dynamic> parameters;\n  final String? screenName;\n  final String? previousScreen;\n  final Map<String, dynamic> deviceInfo;\n  final Map<String, dynamic> userContext;\n  final Duration? sessionDuration;\n  final String appVersion;\n  final String platform;\n  final String? userSegment;\n  final bool isOffline;\n  final Map<String, dynamic>? customDimensions;\n\n  const AnalyticsEvent({\n    required this.id,\n    required this.userId,\n    required this.sessionId,\n    required this.eventType,\n    required this.eventName,\n    required this.timestamp,\n    required this.parameters,\n    this.screenName,\n    this.previousScreen,\n    required this.deviceInfo,\n    required this.userContext,\n    this.sessionDuration,\n    required this.appVersion,\n    required this.platform,\n    this.userSegment,\n    this.isOffline = false,\n    this.customDimensions,\n  });\n\n  factory AnalyticsEvent.create({\n    required String userId,\n    required String eventType,\n    required String eventName,\n    Map<String, dynamic> parameters = const {},\n    String? sessionId,\n    String? screenName,\n    String? previousScreen,\n    Map<String, dynamic> deviceInfo = const {},\n    Map<String, dynamic> userContext = const {},\n    Duration? sessionDuration,\n    String appVersion = '1.0.0',\n    String platform = 'mobile',\n    String? userSegment,\n    bool isOffline = false,\n    Map<String, dynamic>? customDimensions,\n  }) {\n    return AnalyticsEvent(\n      id: '${DateTime.now().millisecondsSinceEpoch}_${eventName}_${userId.substring(0, 8)}',\n      userId: userId,\n      sessionId: sessionId ?? 'session_${DateTime.now().millisecondsSinceEpoch}',\n      eventType: eventType,\n      eventName: eventName,\n      timestamp: DateTime.now(),\n      parameters: parameters,\n      screenName: screenName,\n      previousScreen: previousScreen,\n      deviceInfo: deviceInfo,\n      userContext: userContext,\n      sessionDuration: sessionDuration,\n      appVersion: appVersion,\n      platform: platform,\n      userSegment: userSegment,\n      isOffline: isOffline,\n      customDimensions: customDimensions,\n    );\n  }\n\n  factory AnalyticsEvent.fromJson(Map<String, dynamic> json) => _$AnalyticsEventFromJson(json);\n  Map<String, dynamic> toJson() => _$AnalyticsEventToJson(this);\n\n  AnalyticsEvent copyWith({\n    String? id,\n    String? userId,\n    String? sessionId,\n    String? eventType,\n    String? eventName,\n    DateTime? timestamp,\n    Map<String, dynamic>? parameters,\n    String? screenName,\n    String? previousScreen,\n    Map<String, dynamic>? deviceInfo,\n    Map<String, dynamic>? userContext,\n    Duration? sessionDuration,\n    String? appVersion,\n    String? platform,\n    String? userSegment,\n    bool? isOffline,\n    Map<String, dynamic>? customDimensions,\n  }) {\n    return AnalyticsEvent(\n      id: id ?? this.id,\n      userId: userId ?? this.userId,\n      sessionId: sessionId ?? this.sessionId,\n      eventType: eventType ?? this.eventType,\n      eventName: eventName ?? this.eventName,\n      timestamp: timestamp ?? this.timestamp,\n      parameters: parameters ?? this.parameters,\n      screenName: screenName ?? this.screenName,\n      previousScreen: previousScreen ?? this.previousScreen,\n      deviceInfo: deviceInfo ?? this.deviceInfo,\n      userContext: userContext ?? this.userContext,\n      sessionDuration: sessionDuration ?? this.sessionDuration,\n      appVersion: appVersion ?? this.appVersion,\n      platform: platform ?? this.platform,\n      userSegment: userSegment ?? this.userSegment,\n      isOffline: isOffline ?? this.isOffline,\n      customDimensions: customDimensions ?? this.customDimensions,\n    );\n  }\n}\n\n/// Enhanced classification analytics with more detailed tracking\n@JsonSerializable()\nclass ClassificationAnalytics {\n  final String classificationId;\n  final String userId;\n  final DateTime timestamp;\n  final String category;\n  final String? subcategory;\n  final String? materialType;\n  final double confidence;\n  final String method; // camera, upload, manual\n  final Map<String, dynamic> imageMetadata;\n  final Map<String, dynamic> aiModelInfo;\n  final int pointsEarned;\n  final String source; // single_use, multi_use, household, commercial\n  final Map<String, dynamic> locationData;\n  final bool isRecyclable;\n  final bool isCompostable;\n  final bool requiresSpecialDisposal;\n  final String? disposalGuidance;\n  final Duration processingTime;\n  final List<String> alternativeCategories;\n  final Map<String, dynamic> userFeedback;\n  final Map<String, dynamic> qualityMetrics;\n  final String? contextTags;\n  final bool isShared;\n  final String? familyId;\n  final Map<String, dynamic> environmentalImpact;\n  final Map<String, dynamic> costAnalysis;\n  final bool correctionRequired;\n  final String? originalPrediction;\n  final String? correctedCategory;\n  final Map<String, dynamic> learningData;\n\n  const ClassificationAnalytics({\n    required this.classificationId,\n    required this.userId,\n    required this.timestamp,\n    required this.category,\n    this.subcategory,\n    this.materialType,\n    required this.confidence,\n    required this.method,\n    required this.imageMetadata,\n    required this.aiModelInfo,\n    required this.pointsEarned,\n    required this.source,\n    required this.locationData,\n    required this.isRecyclable,\n    required this.isCompostable,\n    required this.requiresSpecialDisposal,\n    this.disposalGuidance,\n    required this.processingTime,\n    required this.alternativeCategories,\n    required this.userFeedback,\n    required this.qualityMetrics,\n    this.contextTags,\n    required this.isShared,\n    this.familyId,\n    required this.environmentalImpact,\n    required this.costAnalysis,\n    required this.correctionRequired,\n    this.originalPrediction,\n    this.correctedCategory,\n    required this.learningData,\n  });\n\n  factory ClassificationAnalytics.fromJson(Map<String, dynamic> json) => _$ClassificationAnalyticsFromJson(json);\n  Map<String, dynamic> toJson() => _$ClassificationAnalyticsToJson(this);\n}\n\n/// Points and gamification analytics\n@JsonSerializable()\nclass GamificationAnalytics {\n  final String userId;\n  final DateTime timestamp;\n  final String eventType; // points_earned, level_up, streak, achievement, etc.\n  final int pointsEarned;\n  final int totalPoints;\n  final int level;\n  final int previousLevel;\n  final Map<String, int> categoryPoints;\n  final Map<String, dynamic> streakData;\n  final List<String> unlockedAchievements;\n  final List<String> completedChallenges;\n  final Map<String, dynamic> weeklyStats;\n  final Map<String, dynamic> monthlyStats;\n  final String pointsSource; // classification, streak, achievement, challenge\n  final Map<String, dynamic> levelBenefits;\n  final Duration sessionTime;\n  final int consecutiveDays;\n  final Map<String, dynamic> leaderboardPosition;\n  final Map<String, dynamic> socialComparisons;\n  final bool isNewRecord;\n  final Map<String, dynamic> motivationalTriggers;\n\n  const GamificationAnalytics({\n    required this.userId,\n    required this.timestamp,\n    required this.eventType,\n    required this.pointsEarned,\n    required this.totalPoints,\n    required this.level,\n    required this.previousLevel,\n    required this.categoryPoints,\n    required this.streakData,\n    required this.unlockedAchievements,\n    required this.completedChallenges,\n    required this.weeklyStats,\n    required this.monthlyStats,\n    required this.pointsSource,\n    required this.levelBenefits,\n    required this.sessionTime,\n    required this.consecutiveDays,\n    required this.leaderboardPosition,\n    required this.socialComparisons,\n    required this.isNewRecord,\n    required this.motivationalTriggers,\n  });\n\n  factory GamificationAnalytics.fromJson(Map<String, dynamic> json) => _$GamificationAnalyticsFromJson(json);\n  Map<String, dynamic> toJson() => _$GamificationAnalyticsToJson(this);\n}\n\n/// User engagement and behavior analytics\n@JsonSerializable()\nclass EngagementAnalytics {\n  final String userId;\n  final DateTime timestamp;\n  final Duration sessionLength;\n  final int screensVisited;\n  final Map<String, Duration> screenTimeSpent;\n  final int actionsPerformed;\n  final Map<String, int> featureUsage;\n  final List<String> userJourney;\n  final Map<String, dynamic> interactionPatterns;\n  final int classificationsPerSession;\n  final double averageConfidenceScore;\n  final int socialInteractions;\n  final int educationalContentViewed;\n  final Map<String, dynamic> preferenceData;\n  final Map<String, dynamic> usabilityMetrics;\n  final List<String> painPoints;\n  final List<String> successMoments;\n  final Map<String, dynamic> accessibilityUsage;\n  final bool isPowerUser;\n  final String userSegment;\n  final Map<String, dynamic> retentionIndicators;\n  final Map<String, dynamic> churnRisk;\n\n  const EngagementAnalytics({\n    required this.userId,\n    required this.timestamp,\n    required this.sessionLength,\n    required this.screensVisited,\n    required this.screenTimeSpent,\n    required this.actionsPerformed,\n    required this.featureUsage,\n    required this.userJourney,\n    required this.interactionPatterns,\n    required this.classificationsPerSession,\n    required this.averageConfidenceScore,\n    required this.socialInteractions,\n    required this.educationalContentViewed,\n    required this.preferenceData,\n    required this.usabilityMetrics,\n    required this.painPoints,\n    required this.successMoments,\n    required this.accessibilityUsage,\n    required this.isPowerUser,\n    required this.userSegment,\n    required this.retentionIndicators,\n    required this.churnRisk,\n  });\n\n  factory EngagementAnalytics.fromJson(Map<String, dynamic> json) => _$EngagementAnalyticsFromJson(json);\n  Map<String, dynamic> toJson() => _$EngagementAnalyticsToJson(this);\n}\n\n/// Environmental impact and sustainability analytics\n@JsonSerializable()\nclass SustainabilityAnalytics {\n  final String userId;\n  final DateTime timestamp;\n  final String impactType; // recycling, composting, waste_reduction, energy_saving\n  final double impactAmount;\n  final String impactUnit; // kg, tons, liters, kWh\n  final double carbonFootprintReduction; // kg CO2 equivalent\n  final double costSavings; // in local currency\n  final Map<String, dynamic> categoryImpacts;\n  final Map<String, dynamic> monthlyTotals;\n  final Map<String, dynamic> yearlyTotals;\n  final List<String> sustainabilityGoals;\n  final Map<String, dynamic> goalProgress;\n  final Map<String, dynamic> communityImpact;\n  final Map<String, dynamic> educationalOutcomes;\n  final bool isImprovementFromPrevious;\n  final Map<String, dynamic> benchmarkComparisons;\n  final List<String> recommendedActions;\n  final Map<String, dynamic> certificationProgress;\n\n  const SustainabilityAnalytics({\n    required this.userId,\n    required this.timestamp,\n    required this.impactType,\n    required this.impactAmount,\n    required this.impactUnit,\n    required this.carbonFootprintReduction,\n    required this.costSavings,\n    required this.categoryImpacts,\n    required this.monthlyTotals,\n    required this.yearlyTotals,\n    required this.sustainabilityGoals,\n    required this.goalProgress,\n    required this.communityImpact,\n    required this.educationalOutcomes,\n    required this.isImprovementFromPrevious,\n    required this.benchmarkComparisons,\n    required this.recommendedActions,\n    required this.certificationProgress,\n  });\n\n  factory SustainabilityAnalytics.fromJson(Map<String, dynamic> json) => _$SustainabilityAnalyticsFromJson(json);\n  Map<String, dynamic> toJson() => _$SustainabilityAnalyticsToJson(this);\n}\n\n/// Comprehensive analytics aggregation model\n@JsonSerializable()\nclass AnalyticsAggregation {\n  final String userId;\n  final DateTime periodStart;\n  final DateTime periodEnd;\n  final String aggregationType; // daily, weekly, monthly, yearly\n  final Map<String, dynamic> classificationStats;\n  final Map<String, dynamic> gamificationStats;\n  final Map<String, dynamic> engagementStats;\n  final Map<String, dynamic> sustainabilityStats;\n  final Map<String, dynamic> socialStats;\n  final Map<String, dynamic> performanceStats;\n  final Map<String, dynamic> monetizationStats;\n  final Map<String, dynamic> userSegmentData;\n  final Map<String, dynamic> trendAnalysis;\n  final Map<String, dynamic> predictiveMetrics;\n  final List<String> insights;\n  final List<String> recommendations;\n  final Map<String, dynamic> comparativeBenchmarks;\n  final Map<String, dynamic> qualityScores;\n\n  const AnalyticsAggregation({\n    required this.userId,\n    required this.periodStart,\n    required this.periodEnd,\n    required this.aggregationType,\n    required this.classificationStats,\n    required this.gamificationStats,\n    required this.engagementStats,\n    required this.sustainabilityStats,\n    required this.socialStats,\n    required this.performanceStats,\n    required this.monetizationStats,\n    required this.userSegmentData,\n    required this.trendAnalysis,\n    required this.predictiveMetrics,\n    required this.insights,\n    required this.recommendations,\n    required this.comparativeBenchmarks,\n    required this.qualityScores,\n  });\n\n  factory AnalyticsAggregation.fromJson(Map<String, dynamic> json) => _$AnalyticsAggregationFromJson(json);\n  Map<String, dynamic> toJson() => _$AnalyticsAggregationToJson(this);\n}\n